var browser,chrome,c;const a=!0,n="[FediAct]",t=1,i="/api/v1/mutes",s="/api/v1/blocks",o="/api/v1/domain_blocks",r=/"access_token":".*?",/gm,d={fediact_homeinstance:null};function u(t){a&&console.log(n+" "+t)}async function h(a){return new Promise(async function(e){try{var t=await fetch(a,{method:"HEAD"});t.redirected?e(t.url):e(!1)}catch(t){u(t),e(!1)}})}async function f(){return new Promise(async function(e){var t="https://"+c.fediact_homeinstance;try{var a=await(await fetch(t)).text()}catch(t){return u(t),void e(!1)}if(a){t=a.match(r);if(t){var a=t[0].search(/"access_token":"/),n=t[0].search(/",/);if(-1<a&&-1<n){t=t[0].substring(a+=16,n);if(16<t.length)return c.fediact_token=t,void e(!0)}}}c.fediact_token=null,u("Token could not be found."),e(!1)})}async function l(){return new Promise(async function(t){[c.fediact_mutes,c.fediact_blocks,c.fediact_domainblocks]=[[],[],[]];var[e,a,n]=await Promise.all([fetch("https://"+c.fediact_homeinstance+i,{headers:{Authorization:"Bearer "+c.fediact_token}}).then(t=>t.json()),fetch("https://"+c.fediact_homeinstance+s,{headers:{Authorization:"Bearer "+c.fediact_token}}).then(t=>t.json()),fetch("https://"+c.fediact_homeinstance+o,{headers:{Authorization:"Bearer "+c.fediact_token}}).then(t=>t.json())]);e.length&&c.fediact_mutes.push(...e.map(t=>t.acct)),a.length&&c.fediact_blocks.push(...a.map(t=>t.acct)),n.length&&(c.fediact_domainblocks=n),t(!0)})}async function m(){return new Promise(async function(a){try{c=await(browser||chrome).storage.local.get(d)}catch(t){return u(t),void a(!1)}if(c.fediact_homeinstance){await f(),await l();try{await(browser||chrome).storage.local.set(c),a(!0)}catch{u(e)}}else u("Home instance not set"),a(!1)})}async function _(){chrome.tabs.query({},async function(t){for(var e=0;e<t.length;++e)try{chrome.tabs.sendMessage(t[e].id,{updatedfedisettings:!0})}catch(t){continue}})}chrome.runtime.onInstalled.addListener(m),chrome.alarms.create("refresh",{periodInMinutes:t}),chrome.alarms.onAlarm.addListener(m),chrome.runtime.onMessage.addListener((t,n,e)=>t.url?(h(t.url).then(e),!0):t.updatedsettings?(m().then(_),!0):void(t.running&&chrome.tabs.onUpdated.addListener(async function(t,e,a){if(t===n.tab.id&&e.url)try{await chrome.tabs.sendMessage(t,{urlchanged:e.url})}catch(t){u(t)}})));